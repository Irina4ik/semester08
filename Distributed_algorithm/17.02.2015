Доклад + задача (вопросы)
--
Критические секции
(Какие проблемы, как решается; изучить методы проверки корректности алгоритмов на основе диаграмм переходов)

Есть N процессов
Критической секция
(в одну ячейку памяти нельзя писать несколько процессов одновременно)

Цель: посторожить алгоритм работы с кр. секц. каждого процесса так, чтобы
1. В любой момент времени в критической секции может находиться не более одного процесса. (Взаимоисключаемость)
2. Deadlock. Отсутствие дедлоков (блокировка процессов). Если существует процесс, который хочет попасть в критическую секцию, то он когда-нибудь в неё попадёт.
3. Starvation. Отсутствие голодания. Для любого процесса, который хочет попасть в критическую секцию - когда-нибудь в неё попадёт.

-Предпротокол - нахождение в некритической секции / непрогрессивный
(м. нах. сколько захочет)
-Протокол (алгоритм работы процессора) - попадание в критическую секцию, работа в крит. секции / д.б. прогрессивны
-Постпротокол / прогрессивный

(N=2)
(предпротокол)

@Alg 3.2
integer turn=1
p
loop forever
p1: non-crit sec
p2: await (turn=1)
p3: crit sec
p4: turn=2
q
loop forever
q1: non-crit sec
q2: await (turn=2)
q3: crit sec
q4: turn<-1;

@Алгоритм Декера
boolean want p <- 0,
        want p <- 0;
integer turn <- 1;
p:
p1: want p <- 1;
p2: while (want q)
p3:     if (turn n=2)
p4:         want p <- 0
p5:        await (turn=1)
p6: want p <- 1
(Крит. секция)
p7: turn <- 2
p8: want p <- 0
